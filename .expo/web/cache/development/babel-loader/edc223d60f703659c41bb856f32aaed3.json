{"ast":null,"code":"import React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar SlidingDot = function SlidingDot(_ref) {\n  var scrollX = _ref.scrollX,\n      data = _ref.data,\n      dotSize = _ref.dotSize,\n      containerStyle = _ref.containerStyle,\n      dotStyle = _ref.dotStyle,\n      slidingIndicatorStyle = _ref.slidingIndicatorStyle,\n      marginHorizontal = _ref.marginHorizontal;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var defaultProps = {\n    dotSize: dotSize || 12,\n    marginHorizontal: marginHorizontal || 3\n  };\n  var inputRange = [-width, 0, width];\n  var translateX = scrollX.interpolate({\n    inputRange: inputRange,\n    outputRange: [-defaultProps.dotSize + defaultProps.marginHorizontal * 2, 0, defaultProps.dotSize + defaultProps.marginHorizontal * 2]\n  });\n  return React.createElement(View, {\n    style: [{\n      height: defaultProps.dotSize\n    }, styles.containerStyle, containerStyle]\n  }, React.createElement(Animated.View, {\n    style: [{\n      width: defaultProps.dotSize,\n      height: defaultProps.dotSize,\n      borderRadius: defaultProps.dotSize / 2\n    }, styles.slidingIndicatorStyle, {\n      position: 'absolute',\n      marginHorizontal: marginHorizontal,\n      transform: [{\n        translateX: translateX\n      }]\n    }, slidingIndicatorStyle]\n  }), data.map(function (_item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [{\n        width: defaultProps.dotSize,\n        height: defaultProps.dotSize,\n        marginHorizontal: defaultProps.marginHorizontal,\n        borderRadius: defaultProps.dotSize / 2\n      }, styles.dotStyle, dotStyle]\n    });\n  }));\n};\n\nvar styles = StyleSheet.create({\n  containerStyle: {\n    position: 'absolute',\n    bottom: 30,\n    flexDirection: 'row',\n    alignSelf: 'center'\n  },\n  dotStyle: {\n    backgroundColor: '#347af0',\n    opacity: 0.4\n  },\n  slidingIndicatorStyle: {\n    backgroundColor: '#347af0',\n    zIndex: 99,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});\nexport default SlidingDot;","map":{"version":3,"sources":["SlidingDot.tsx"],"names":["SlidingDot","marginHorizontal","width","useWindowDimensions","defaultProps","dotSize","inputRange","translateX","outputRange","height","styles","borderRadius","position","transform","containerStyle","bottom","flexDirection","alignSelf","dotStyle","backgroundColor","opacity","slidingIndicatorStyle","zIndex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\nexport interface SlidingDotProps {\n  data: Array<Object>;\n  scrollX: Animated.Value;\n  dotSize?: number;\n  containerStyle?: ViewStyle;\n  dotStyle?: ViewStyle;\n  dotContainerStyle?: ViewStyle;\n  slidingIndicatorStyle?: ViewStyle;\n  marginHorizontal?: number;\n}\n\nconst SlidingDot = ({\n  scrollX,\n  data,\n  dotSize,\n  containerStyle,\n  dotStyle,\n  slidingIndicatorStyle,\n  marginHorizontal,\n}: SlidingDotProps) => {\n  const { width } = useWindowDimensions();\n\n  const defaultProps = {\n    dotSize: dotSize || 12,\n    marginHorizontal: marginHorizontal || 3,\n  };\n  const inputRange = [-width, 0, width];\n  const translateX = scrollX.interpolate({\n    inputRange,\n    outputRange: [\n      -defaultProps.dotSize + defaultProps.marginHorizontal * 2,\n      0,\n      defaultProps.dotSize + defaultProps.marginHorizontal * 2,\n    ],\n  });\n\n  return (\n    <View\n      style={[\n        { height: defaultProps.dotSize },\n        styles.containerStyle,\n        containerStyle,\n      ]}\n    >\n      <Animated.View\n        style={[\n          {\n            width: defaultProps.dotSize,\n            height: defaultProps.dotSize,\n            borderRadius: defaultProps.dotSize / 2,\n          },\n          styles.slidingIndicatorStyle,\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            position: 'absolute',\n            marginHorizontal: marginHorizontal,\n            transform: [{ translateX }],\n          },\n          slidingIndicatorStyle,\n        ]}\n      />\n      {data.map((_item, index) => {\n        return (\n          <View\n            key={index}\n            style={[\n              {\n                width: defaultProps.dotSize,\n                height: defaultProps.dotSize,\n                marginHorizontal: defaultProps.marginHorizontal,\n                borderRadius: defaultProps.dotSize / 2,\n              },\n              styles.dotStyle,\n              dotStyle,\n            ]}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    position: 'absolute',\n    bottom: 30,\n    flexDirection: 'row',\n    alignSelf: 'center',\n  },\n  dotStyle: {\n    backgroundColor: '#347af0',\n    opacity: 0.4,\n  },\n  slidingIndicatorStyle: {\n    backgroundColor: '#347af0',\n    zIndex: 99,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n  },\n});\n\nexport default SlidingDot;\n"]},"metadata":{},"sourceType":"module"}